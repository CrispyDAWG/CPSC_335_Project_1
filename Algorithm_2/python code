def findPreferredCity(city_distances, fuel, mpg):
    n = len(city_distances)  # total number of cities
    tank = 0  # current fuel in the tank
    total_fuel_surplus = 0  # total fuel surplus
    start_city = 0  # starting city index
    
    # Calculate the total fuel surplus to check if the trip is feasible
    for i in range(n):
        fuel_gain = fuel[i] * mpg  # fuel gained at the current city
        fuel_cost = city_distances[i]  # fuel needed to reach the next city
        total_fuel_surplus += fuel_gain - fuel_cost  # update total fuel surplus
    
    # If total fuel surplus is negative, it's impossible to complete the trip
    if total_fuel_surplus < 0:
        return -1
    
    # Find the preferred starting city
    tank = 0  # reset the tank
    for i in range(n):
        fuel_gain = fuel[i] * mpg  # fuel gained at the current city
        fuel_cost = city_distances[i]  # fuel needed to reach the next city
        tank += fuel_gain - fuel_cost  # update the current fuel in the tank
        
        # If the fuel in the tank is not enough to reach the next city
        if tank < 0:
            start_city = i + 1  # move the starting point to the next city
            tank = 0  # reset the tank

    return start_city

# Sample input
city_distances = [5, 25, 15, 10, 15]
fuel = [1, 2, 1, 0, 3]
mpg = 10

result = findPreferredCity(city_distances, fuel, mpg)
print("The preferred starting city is:", result)

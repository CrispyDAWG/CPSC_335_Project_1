Function findPreferredCity(city_distances, fuel, mpg):
	n = length(city_distances)   // the total number of cities
		tank = 0                  // current fuel in tank
		total_fuel_surplus = 0                      // fuel surplus
		start_city = 0                      // start city
	
	//  iterate through all cities and calculate the fuel surplus
	for i = 0 to n-1:
		fuel_gain = fuel[i] * mpg   // fuel gained at the current city
		fuel_cost = city_distances[i]   // the fuel needed for arriving next city
		total_fuel_surplus = fule_gain - fuel_cost   // update the fuel surplus

	// if total fuel is less than the total cost, itâ€™s impossible to complete the circuit
	if total_fuel_surplus < 0
		return -1
	
	// find the best starting city
	for i from 0 to n-1:
		fuel_gain = fuel[i] * mpg    // fuel gained at the current city
		fuel_cost = city_distances[i]   // the fuel needed for arriving next city
		total_fuel_surplus = fule_gain - fuel_cost   // update the fuel surplus
		
		// if the current fuel is not enough for reaching the next city
		if tank < 0:
			start_city = i + 1   // the next city is becoming the starting point
			tank = 0   // reset the current fuel
	return start_city
